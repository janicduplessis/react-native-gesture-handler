{"version":3,"sources":["Wrap.web.tsx"],"names":["Wrap","children","ref","child","React","Children","only","clone","cloneElement","collapsable","props","display","e","Error","AnimatedWrap"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAEO,MAAMA,IAAI,gBAAG,uBAClB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAeC,GAAf,KAAuB;AACrB,MAAI;AACF;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAU,GAAGC,eAAMC,QAAN,CAAeC,IAAf,CAAoBL,QAApB,CAAnB;;AAEA,UAAMM,KAAK,gBAAGH,eAAMI,YAAN,CACZL,KADY,EAEZ;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAFY,EAGZ;AACAN,IAAAA,KAAK,CAACO,KAAN,CAAYT,QAJA,CAAd;;AAOA,wBACE;AACE,MAAA,GAAG,EAAEC,GADP;AAEE,MAAA,KAAK,EAAE;AAAES,QAAAA,OAAO,EAAE;AAAX;AAFT,OAGGJ,KAHH,CADF;AAOD,GAtBD,CAsBE,OAAOK,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CACJ,uBACG,2KADH,CADI,CAAN;AAKD;AACF,CA/BiB,CAAb,C,CAkCP;AACA;;;AACO,MAAMC,YAAY,GAAGd,IAArB","sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // I don't think that fighting with types over such a simple function is worth it\n      // The only thing it does is add 'collapsable: false' to the child component\n      // to make sure it is in the native view hierarchy so the detector can find\n      // correct viewTag to attach to.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      const clone = React.cloneElement(\n        child,\n        { collapsable: false },\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        child.props.children\n      );\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {clone}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"]}