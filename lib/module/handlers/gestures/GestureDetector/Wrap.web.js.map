{"version":3,"sources":["Wrap.web.tsx"],"names":["React","forwardRef","tagMessage","Wrap","children","ref","child","Children","only","clone","cloneElement","collapsable","props","display","e","Error","AnimatedWrap"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,IAAI,gBAAGF,UAAU,CAC5B,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAeC,GAAf,KAAuB;AACrB,MAAI;AACF;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAU,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBJ,QAApB,CAAnB;AAEA,UAAMK,KAAK,gBAAGT,KAAK,CAACU,YAAN,CACZJ,KADY,EAEZ;AAAEK,MAAAA,WAAW,EAAE;AAAf,KAFY,EAGZ;AACAL,IAAAA,KAAK,CAACM,KAAN,CAAYR,QAJA,CAAd;AAOA,wBACE;AACE,MAAA,GAAG,EAAEC,GADP;AAEE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX;AAFT,OAGGJ,KAHH,CADF;AAOD,GAtBD,CAsBE,OAAOK,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CACJb,UAAU,CACP,2KADO,CADN,CAAN;AAKD;AACF,CA/B2B,CAAvB,C,CAkCP;AACA;;AACA,OAAO,MAAMc,YAAY,GAAGb,IAArB","sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // I don't think that fighting with types over such a simple function is worth it\n      // The only thing it does is add 'collapsable: false' to the child component\n      // to make sure it is in the native view hierarchy so the detector can find\n      // correct viewTag to attach to.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      const clone = React.cloneElement(\n        child,\n        { collapsable: false },\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        child.props.children\n      );\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {clone}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"]}