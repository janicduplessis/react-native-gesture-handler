(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{392:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),i=(n(0),n(402)),s={id:"test-api",title:"Testing"},l={unversionedId:"api/test-api",id:"api/test-api",isDocsHomePage:!1,title:"Testing",description:"If you want to use fireGestureHandler and getByGestureTestId, you need to import them from react-native-gesture-handler/jest-utils package.",source:"@site/docs/api/test-api.md",slug:"/api/test-api",permalink:"/react-native-gesture-handler/docs/next/api/test-api",editUrl:"https://github.com/software-mansion/react-native-gesture-handler/tree/main/docs/docs/api/test-api.md",version:"current",sidebar:"docs",previous:{title:"createNativeWrapper",permalink:"/react-native-gesture-handler/docs/next/gesture-handlers/api/create-native-wrapper"},next:{title:"How does it work?",permalink:"/react-native-gesture-handler/docs/next/under-the-hood/how-does-it-work"}},o=[{value:"fireGestureHandler(gestureOrHandler, eventList)",id:"firegesturehandlergestureorhandler-eventlist",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Example",id:"example",children:[]}]},{value:"getByGestureTestId(testID)",id:"getbygesturetestidtestid",children:[{value:"Arguments",id:"arguments-1",children:[]},{value:"Notes",id:"notes",children:[]},{value:"Example",id:"example-1",children:[]}]}],c={rightToc:o};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If you want to use ",Object(i.b)("inlineCode",{parentName:"p"},"fireGestureHandler")," and ",Object(i.b)("inlineCode",{parentName:"p"},"getByGestureTestId"),", you need to import them from ",Object(i.b)("inlineCode",{parentName:"p"},"react-native-gesture-handler/jest-utils")," package."))),Object(i.b)("h2",{id:"firegesturehandlergestureorhandler-eventlist"},"fireGestureHandler(gestureOrHandler, eventList)"),Object(i.b)("p",null,"Simulates one event stream (i.e. event sequence starting with ",Object(i.b)("inlineCode",{parentName:"p"},"BEGIN")," state and ending\nwith one of ",Object(i.b)("inlineCode",{parentName:"p"},"END"),"/",Object(i.b)("inlineCode",{parentName:"p"},"FAIL"),"/",Object(i.b)("inlineCode",{parentName:"p"},"CANCEL")," states), calling appropriate callbacks associated with given gesture handler."),Object(i.b)("h3",{id:"arguments"},"Arguments"),Object(i.b)("h4",{id:"gestureorhandler"},Object(i.b)("inlineCode",{parentName:"h4"},"gestureOrHandler")),Object(i.b)("p",null,"Represents either:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Gesture handler component found by Jest queries (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"getByTestId"),")"),Object(i.b)("li",{parentName:"ol"},"Gesture found by ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getbygestureidtestid"}),Object(i.b)("inlineCode",{parentName:"a"},"getByGestureTestId()")))),Object(i.b)("h4",{id:"eventlist"},Object(i.b)("inlineCode",{parentName:"h4"},"eventList")),Object(i.b)("p",null,"Event data passed to appropriate callback. RNGH fills event list if required\ndata is missing using these rules:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"oldState")," is filled using state of the previous event. ",Object(i.b)("inlineCode",{parentName:"li"},"BEGIN")," events use\n",Object(i.b)("inlineCode",{parentName:"li"},"UNDETERMINED")," value as previous event."),Object(i.b)("li",{parentName:"ol"},"Events after first ",Object(i.b)("inlineCode",{parentName:"li"},"ACTIVE")," state can omit ",Object(i.b)("inlineCode",{parentName:"li"},"state")," field."),Object(i.b)("li",{parentName:"ol"},"Handler specific data is filled (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"numberOfTouches"),", ",Object(i.b)("inlineCode",{parentName:"li"},"x")," fields) with\ndefaults."),Object(i.b)("li",{parentName:"ol"},"Missing ",Object(i.b)("inlineCode",{parentName:"li"},"BEGIN")," and ",Object(i.b)("inlineCode",{parentName:"li"},"END")," events are added with data copied from first and last\npassed event, respectively."),Object(i.b)("li",{parentName:"ol"},"If first event don't have ",Object(i.b)("inlineCode",{parentName:"li"},"state")," field, the ",Object(i.b)("inlineCode",{parentName:"li"},"ACTIVE")," state is assumed.")),Object(i.b)("p",null,"Some examples:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"const oldStateFilled = [\n  { state: State.BEGAN },\n  { state: State.ACTIVE },\n  { state: State.END },\n]; // three events with specified state are fired.\n\nconst implicitActiveState = [\n  { state: State.BEGAN },\n  { state: State.ACTIVE },\n  { x: 5 },\n  { state: State.END },\n]; // 4 events, including two ACTIVE events (second one has overriden additional data).\n\nconst implicitBegin = [\n  { x: 1, y: 11 },\n  { x: 2, y: 12, state: State.FAILED },\n]; // 3 events, including implicit BEGAN, one ACTIVE, and one FAILED event with additional data.\n\nconst implicitBeginAndEnd = [\n  { x: 5, y: 15 },\n  { x: 6, y: 16 },\n  { x: 7, y: 17 },\n]; // 5 events, including 3 ACTIVE events and implicit BEGAN and END events. BEGAN uses first event's additional data, END uses last event's additional data.\n\nconst allImplicits = []; // 3 events, one BEGIN, one ACTIVE, one END with defaults.\n")),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("p",null,"Extracted from RNGH tests, check ",Object(i.b)("inlineCode",{parentName:"p"},"Events.test.tsx")," for full implementation."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"it('sends events with additional data to handlers', () => {\n  const panHandlers = mockedEventHandlers();\n  render(<SingleHandler handlers={panHandlers} treatStartAsUpdate />);\n  fireGestureHandler<PanGesture>(getByGestureTestId('pan'), [\n    { state: State.BEGAN, translationX: 0 },\n    { state: State.ACTIVE, translationX: 10 },\n    { translationX: 20 },\n    { translationX: 20 },\n    { state: State.END, translationX: 30 },\n  ]);\n\n  expect(panHandlers.active).toBeCalledTimes(3);\n  expect(panHandlers.active).toHaveBeenLastCalledWith(\n    expect.objectContaining({ translationX: 20 })\n  );\n});\n")),Object(i.b)("h2",{id:"getbygesturetestidtestid"},"getByGestureTestId(testID)"),Object(i.b)("p",null,"Returns opaque data type associated with gesture. Gesture is found via ",Object(i.b)("inlineCode",{parentName:"p"},"testID")," attribute in rendered\ncomponents (see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/react-native-gesture-handler/docs/next/api/gestures/base-gesture-config#withrefref"}),Object(i.b)("inlineCode",{parentName:"a"},"withTestID")," method"),")."),Object(i.b)("h3",{id:"arguments-1"},"Arguments"),Object(i.b)("h4",{id:"testid"},Object(i.b)("inlineCode",{parentName:"h4"},"testID")),Object(i.b)("p",null,"String identifying gesture."),Object(i.b)("h3",{id:"notes"},"Notes"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"testID")," must be unique among components rendered in test."),Object(i.b)("h3",{id:"example-1"},"Example"),Object(i.b)("p",null,"See above example for ",Object(i.b)("inlineCode",{parentName:"p"},"fireGestureHandler"),"."))}d.isMDXComponent=!0},402:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,m=p["".concat(s,".").concat(u)]||p[u]||b[u]||i;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);